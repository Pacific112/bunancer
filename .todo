[x] Load Balancer with support for different servers
[x] Proxy traffic to single server
[x] Round Robin algorithm
[x] Health checks
  [x] Possibility to add / remove servers from the pool
[x] error handling
[x] Timeouts
[x] External place for config storage
[x] Start test servers in parallel in more clever way - Simple CLI?
  [x] Start detached process
  [x] Keep track of current processes
  [x] Kill process
  [x] Log to files and allow to access logs
[x] Make sure that it works nicely on browser - no double logs for some reason
[x] Async / Concurrency support
  [x] Should counter be locked? How to approach it better
  [x] Hard requirement is that requests must always go to different servers
  [x] Is it even needed when written like this? Probably would be needed if async operation between start of the function and counter
[x] Servers can register themselves in server pool
[x] CLI:
  [x] Kill all servers
  [x] Is this the best way to generate instance id?
  [x] More interactive CLI - use https://github.com/bombshell-dev/clack
  [x] Options:
    [x] Servers -> Logs / Kill / Back
    [x] Add Server -> full config
    [x] Quit
[x] Setup Vite
[x] Dashboard with stats:
  [x] Pool / config management
    [x] Display pools and server statuses
    [x] Make sure statuses are displayed dynamically via SSE
    [x] Prepare small abstractions
      [x] cors
      [x] SSE backend side
      [x] Better usage of event emitter
    [x] Support following events:
      [x] Server online
      [x] Server offline
    [x] Basic CRUD:
      [x] Add simple router abstraction
      [x] Extract common logic from CLI to separate sdk
      [x] Add New Server to the pool
      [x] Kill Server
      [x] Show server logs
  [x] Request Flow
    [x] React Flow
    [x] Displays servers on graph
    [x] Show newly added graph
    [x] Use auto layout for pool
    [x] Mark dead server
    [x] Control panel after selecting node
      [x] stop
      [x] show logs
      [x] Add node after selecting load balancer
[x] Health Checks
  [x] Separate state for currently unavailable servers
  [x] Unavailable servers for a longer time should be removed from pool
  [x] edge should appear only when first health check succeeds (or server is added to the pool)
  [x] for unhealthy servers it should be dotted, for dead there should be none
  [x] After few tries server should become dead
  [x] After registering server first health check should be done immediately
[x] Display basic stats for server (in memory)
  [x] Total requests
  [x] Requests per second
  [x] Error rate
[x] Support for multiple server pools
  [x] Graph support
  [x] Expand / shrink list of servers
  [x] Display top bar on group node - for stats and add new server button
  [x] When pool is empty display only name and button
[ ] Tech
  [ ] Allow to easily change returned error code for the server from SDK
    [ ] CLI
    [ ] Dashboard
  [ ] SDK should support stopping / fetching logs by id
  [ ] Structured logs support
  [ ] Configure base url or just use something better then raw fetch
  [ ] Do not send SSE when state has not changed
  [ ] Figure out types - they should be common between server and client
  [ ] Health check - I don't like current implementation
  [ ] Get rid of ! operator
  [ ] Get rid of hardcoded links
  [ ] ServerPool.allServers should be probably removed... Or maybe not
  [ ] Config should be persistent so after restarting load balancer servers do not need - also nice for development as watch breaks stuff
  [ ] CORS - make sure that it actually behaves how it should and appropriate headers are added
  [ ] DialogClose should be used in dialog not in form...
  [ ] Use NodeToolbar instead of PopoverContent (or together)
  [ ] Handle case when there is no servers in pool - currently error
  [ ] Maybe setupHealthCheck can be simplified to checkHealth or something... - to avoid callbacks
  [ ] Retry with backoff - after fail or health check
  [ ] Figure out where to store stats like time alive
  [ ] Reboot logic (probably file, but maybe etcd worth to consider?)
  [ ] Refetch stats from living servers after reboot
  [ ] Definitely stats should sent delta not actual values.
  [ ] Better algorithm for RPS. CUrrently it is not possible to go to zero
  [ ] Try to not update RPS after every request. Instead store reuests delta and count based on this?
  [ ] Send only stats that frontend actually needs. Right now whole object is sent
  [ ] More efficient stats sending. In the worker? How ofhen should stats be pushed?
  [ ] Better error handling for REST actions - currently nothing
  [ ] SDK - support for pools
    [ ] Allow to add server to specific pool via SDK
    [ ] Create pool via SDK
    [ ] Show shadow node or something on graph to make it easy to create nie pool
  [ ] Should I use better event emitter then built into node? https://www.npmjs.com/package/emittery
    [ ] Should this emitter be global?
  [ ] Router
    [ ] Add support for different parameter names - currently when I use /servers/:id and /servers/:name/details things will not work
    [ ] Add early misconfiguration detection
[ ] CleanUp
    [ ] Load Balancer
    [ ] SDK
    [ ] CLI
    [ ] Introduce workspaces
[ ] Frontend -
  [ ] useSyncExternalStore, parsing, at least state should be provided by the server etc.
  [ ] better abstraction - parsing at least
  [ ] nested objects update
  [ ] Expand / Hide pool - pools should appear only after animation has finished
  [ ] Separate position calculation from creating nodes (move it to separate util)
    [ ] Maybe I should use lib for this? Not sure, I have rather simple case
  [ ] better sse event names
  [ ] Figure out typing between server and frontend
  [ ] Introduce state for storing stats on the frontend. Currently every update causes whole app to rerender
  [ ] In general - split component and code improvements
  [ ] Try to make look and feel between flow and dashboard rectangles similar...
  [ ] Probably square edges will look nicer and cleaner...
  [ ] Do servers need edges? Or maybe it's enough to connect LoadBalancer with server pool?
    [ ] https://github.com/tisoap/react-flow-smart-edge - maybe?
  [ ] Make sure that padding in ServerPool is correctly calculated for all positions
  [ ] Add Server dialog should display ServerPool name
  [ ] CleanUp
[ ] I think I should figure out how to load initial state via SSR instead of ugly useEffect
  [ ] I need to at least use something better then fetch...
[ ] Figure out the best way to deploy React app
  [ ] Serve from Bun?
  [ ] Separate deployment?
  [ ] Do I want to SSR some secrets used to auth with dashboard + initial config?
[ ] Better handle servers created in Bun:
  [ ] Better endpoint / route matching (no ends with)
  [ ] Separate route handling from fetch method
[ ] Monorepo
  [ ] Share types between Bun backend and React frontend
[ ] Fix mutable config - better types?
[ ] TESTS
[ ] Global timeout settings
[ ] Introduce pino for logging
  [ ] Standard access logs on stub server
  [ ] Maybe structured logs
[ ] ADR
  [ ] Why bun?
  [ ] Why SDK
  [ ] Routing algorithms
  [ ] How Servers register themselves
[ ] Deployment to fly.io (or maybe something with less abstractions where I can simply upload containers....)
  [ ] X-Forwarded-IP header or something - to make sure it works
  [ ] Fly launch for
=============================================
[ ] Stats
  [ ] Show graph with number of requests per second
  [ ] Display aggregated pool stats
[ ] Stream server logs instead of static display
[ ] Store stats somewhere
  [ ] Redis?
[ ] Display dashboard on react flow as well (near load balancer)
[ ] Dynamic configuration of load balancer from dashboard
[ ] Backdrop support?
[ ] Auto register
  [ ] Add Basic Auth
  [ ] Use different protocol for communication - some RPC would be much better
  [ ] Allow to configure API port + allow to enable / disable auto registration mode
  [ ] Make sure that server lives when registering
  [ ] Deduplicate servers - not only id but also do not allow same configuration
  [ ] Graceful shutdown + deregister
  [ ] Typing + separate package for registering
  [ ] What is the best way to specify pool to which server joins? Is it possible to validate it in any way
    [ ] Currently server sends SERVER POOL when starting
[ ] Cool animations when creating / destroying node and edges
[ ] Security considerations
  [ ] For example should any of the headers be actually removed?
  [ ] OAuth / JWKS / Basic Auth - only load balancer is actually secured
  [ ] Configurable via dashboard
[ ] Changesets -> https://github.com/changesets/changesets
[ ] Should I repeat failed request against different server
[ ] HTTPS support? Out of the box?
[ ] Circuit breaker pattern
[ ] Code improvements:
  [ ] Modularize code please. Make better use of closures and functions
  [ ] Should server pool be it's own class / type? It should handle health checks by itself
[ ] CLI improvements:
  [ ] Logs streaming
  [ ] Fuzzy search
  [ ] Actual URL to be displayed
  [ ] Custom select component - separator and disabled options
  [ ] Custom wait until button press component
  [ ] Better handle errors and cancellations like CTRL+C
  [ ] Make sure that after stop, entry is removed from servers.txt
  [ ] Small refactor if needed:
    [ ] More types etc
    [ ] Split commands into files???
[ ] Support for different modules
  [ ] Health Check
  [ ] Rate Limiter
  [ ] Whatever user might need
  [ ] Check nginx modules
[ ] Metrics (Sentry?)
  [ ] Number of connections for each server
  [ ] Throughput
  [ ] Status codes etc
[ ] Logs gathered from all servers (for the dashboard)
[ ] Tests
  [ ] Unit
  [ ] Load testing
[ ] XState maybe?
[ ] Documentation
[ ] Support horizontal scaling
[ ] Support for streaming / different http features?
[ ] Rate Limiter
  [ ] IP only
  [ ] per path config
  [ ] x requests in time
  [ ] Geo IP
  [ ] config live!
[ ] Auth Support
  [ ] JWT
  [ ] OAuth maybe?
[ ] MonoRepo?
[ ] Maybe TCP mode? Bun supports